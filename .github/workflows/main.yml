name: Swift Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+' # Trigger on tags like v1.0.0

jobs:
  release:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Swift
        uses: SwiftyLab/setup-swift@latest

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 'latest-stable' # Or specify a version like '14.3.1'

      - name: Build Framework for Release
        run: |
          xcodebuild clean -scheme DependencyInjection -sdk iphoneos -configuration Release ARCHS="arm64" BUILD_DIR="./Build"  -destination 'generic/platform=iOS' SKIP_INSTALL=NO BUILD_LIBRARY_FOR_DISTRIBUTION=YES
      - name: Convert object file to static library
        run: |
          cd ./Build/Release-iphoneos
          ar -crs libDependencyInjection.a DependencyInjection.o

      - name: Create Release XCFramework
        run: |
          cd "./Build"
          xcodebuild -create-xcframework -library Release-iphoneos/libDependencyInjection.a -allow-internal-distribution -output DependencyInjection.xcframework
          mkdir Release
          cp -r "./Build/DependencyInjection.xcframework" Release/DependencyInjection.xcframework
          zip -r DependencyInjection.xcframework Release

      - name: Upload Release Archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./DependencyInjection.zip
          asset_name: DependencyInjection.zip
          asset_content_type: application/zip

  increment_version:
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get current tag
        id: get_tag
        run: |
          echo "CURRENT_TAG=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

      - name: Increment Version
        id: increment_version
        run: |
          CURRENT_TAG="${{ steps.get_tag.outputs.CURRENT_TAG }}"
          VERSION="${CURRENT_TAG#v}" # Remove 'v' prefix
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
          NEXT_PATCH=$((PATCH + 1))
          NEXT_VERSION="v$MAJOR.$MINOR.$NEXT_PATCH"
          echo "NEXT_VERSION=$NEXT_VERSION" >> $GITHUB_OUTPUT

      - name: Update Version in Source (e.g., Info.plist or Version.swift)
        run: |
          # Example for Version.swift:
          echo "let version = \"${{ steps.increment_version.outputs.NEXT_VERSION }}\"" > DependencyInjection/Sources/DependencyInjection/DependencyInjectionVersion.swift

      - name: Commit and Push Version Update
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git commit -m "Incremented version to ${{ steps.increment_version.outputs.NEXT_VERSION }}"
          git push origin HEAD:master # Or your main branch name.
